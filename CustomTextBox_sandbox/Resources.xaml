<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="clr-namespace:CustomTextBox_sandbox.Controls"
                    xmlns:local="clr-namespace:CustomTextBox_sandbox">


    <System:Double x:Key="FontHeightSmall">13</System:Double>
    <System:Double x:Key="FontHeightMid">18</System:Double>


    <SolidColorBrush x:Key="GeometriaPrimaryColorWhite1" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="GeometriaPrimaryColorWhite2" Color="#FFF8F8F8" />
    <SolidColorBrush x:Key="GeometriaPrimaryColorRed" Color="#FFFF0000" />
    <SolidColorBrush x:Key="GeometriaPrimaryColorGrey1" Color="#FFD8D8D8" />
    <SolidColorBrush x:Key="GeometriaPrimaryColorGrey2" Color="#FF4D4C4C" />
    <SolidColorBrush x:Key="GeometriaTextboxHatterDynamic" Color="#FFE8FADE" />
    <SolidColorBrush x:Key="FeliratSzinSzerkesztheto" Color="Black" />
    <SolidColorBrush x:Key="TextBoxComboboxLineFocusedDynamic" Color="#FF4EB51C" />
    <SolidColorBrush x:Key="FeliratSzinElsodleges" Color="Black" />
    <SolidColorBrush x:Key="MaterialColorOrange" Color="#FFFF9800" />
    <SolidColorBrush x:Key="MaterialColorValidationError" Color="#FFFFDA93" />


    <Style TargetType="{x:Type controls:GeometriaTextBox}">
        <Setter Property="FontSize" Value="{StaticResource FontHeightMid}" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="BorderBrush" Value="{StaticResource GeometriaPrimaryColorGrey1}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{DynamicResource GeometriaTextboxHatterDynamic}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CaretBrush" Value="{StaticResource GeometriaPrimaryColorGrey2}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource FeliratSzinSzerkesztheto}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="BaseTextBoxTemplate"
                                 TargetType="{x:Type TextBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border x:Name="border"
                                Grid.Row="0"
                                Padding="5"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3,3,0,0"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          SnapsToDevicePixels="True"
                                          UseLayoutRounding="True"
                                          VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <Viewbox Grid.Row="0"
                                 Width="{Binding ActualWidth, ElementName=border}"
                                 Height="2"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Bottom"
                                 Stretch="Fill">
                            <Canvas Width="100"
                                    Height="100">
                                <Rectangle x:Name="DashedLine"
                                           Canvas.Right="50"
                                           Width="0"
                                           Height="100"
                                           Fill="{DynamicResource TextBoxComboboxLineFocusedDynamic}"
                                           IsEnabled="False"
                                           Stroke="{x:Null}" />
                                <Rectangle x:Name="DashedLineJobb"
                                           Canvas.Left="50"
                                           Width="0"
                                           Height="100"
                                           Fill="{DynamicResource TextBoxComboboxLineFocusedDynamic}"
                                           IsEnabled="False"
                                           Stroke="{x:Null}" />
                            </Canvas>
                        </Viewbox>


                        <controls:MoveablePopUp x:Name="ErrorPopUp"
                                                Grid.Column="1"
                                                Height="{Binding ActualHeight, ElementName=border}"
                                                AllowsTransparency="True"
                                                IsOpen="{Binding IsPopUpVisible, RelativeSource={RelativeSource TemplatedParent}}"
                                                Placement="Bottom"
                                                PlacementTarget="{Binding ElementName=border}"
                                                PopupAnimation="Slide">
                            <Border x:Name="popupBorder"
                                    Width="{Binding ActualWidth, ElementName=border}"
                                    Background="{StaticResource MaterialColorValidationError}"
                                    CornerRadius="0,0,3,3">
                                <TextBlock HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="{Binding PopUpErrorText, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                        </controls:MoveablePopUp>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="controls:GeometriaTextBox.IsPopUpVisible" Value="True">
                            <Setter TargetName="ErrorPopUp" Property="IsOpen" Value="True" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="IsReadOnly" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DashedLine" Property="IsEnabled" Value="True" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource GeometriaTextboxHatterFocusedDynamic}" />
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DashedLine"
                                                         Storyboard.TargetProperty="Width"
                                                         From="0"
                                                         To="50"
                                                         Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="DashedLineJobb"
                                                         Storyboard.TargetProperty="Width"
                                                         From="0"
                                                         To="50"
                                                         Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DashedLine"
                                                         Storyboard.TargetProperty="Width"
                                                         From="50"
                                                         To="0"
                                                         Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="DashedLineJobb"
                                                         Storyboard.TargetProperty="Width"
                                                         From="50"
                                                         To="0"
                                                         Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="Validation.HasError" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource GeometriaTextboxHatterDynamic}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsReadOnly" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource TextBoxComboboxLineFocusedDynamic}" />
                        </MultiTrigger>
                        <Trigger Property="IsReadOnly" Value="False">
                            <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,1" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,1" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{DynamicResource FeliratSzinElsodleges}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsReadOnly" Value="False" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,1" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource GeometriaTextboxHatterDisabledDynamic}" />
                            <Setter Property="Foreground" Value="{DynamicResource FeliratSzinElsodleges}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="IsReadOnly" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource GeometriaTextboxHatterDynamic}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                                <!--<Condition Property="IsReadOnly" Value="False" />-->
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DashedLine" Property="Fill" Value="{StaticResource MaterialColorOrange}" />
                            <Setter TargetName="DashedLineJobb" Property="Fill" Value="{StaticResource MaterialColorOrange}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource MaterialColorValidationError}" />
                            <Setter TargetName="border" Property="BorderThickness" Value="0" />
                            <Setter Property="Validation.ErrorTemplate">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <DockPanel>
                                            <StackPanel DockPanel.Dock="Bottom"
                                                        Orientation="Horizontal">
                                                <Grid Width="12"
                                                      Height="12">
                                                    <Canvas Width="12"
                                                            Height="12">
                                                        <Path Name="ErrorX"
                                                              Canvas.Left="-3"
                                                              Canvas.Top="-3"
                                                              HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"
                                                              Fill="{StaticResource GeometriaPrimaryColorRed}"
                                                              StrokeThickness="2.75">
                                                            <Path.Data>
                                                                <PathGeometry Figures="m 47.499999 20.000043 c -15.2075 0 -27.5 12.2925 -27.5 27.5 0 15.2075 12.2925 27.5 27.5 27.5 15.207503 0 27.500002 -12.2925 27.500002 -27.5 0 -15.2075 -12.2925 -27.5 -27.500002 -27.5 z m 13.750003 37.3725 -3.877503 3.8775 -9.8725 -9.8725 -9.8725 9.8725 -3.8775 -3.8775 9.872499 -9.8725 -9.8725 -9.8725 3.8775 -3.8775 9.8725 9.8725 9.8725 -9.8725 3.877503 3.8775 -9.872503 9.8725 z"
                                                                              FillRule="NonZero" />
                                                            </Path.Data>
                                                            <Path.RenderTransform>
                                                                <ScaleTransform ScaleX="0.2"
                                                                                ScaleY="0.2" />
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Canvas>
                                                </Grid>
                                                <TextBlock Margin="2,0,0,0"
                                                           FontSize="{StaticResource FontHeightSmall}"
                                                           FontWeight="Light"
                                                           Foreground="{StaticResource GeometriaPrimaryColorRed}"
                                                           Text="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                                            </StackPanel>
                                            <AdornedElementPlaceholder x:Name="ErrorAdorner" />
                                        </DockPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>